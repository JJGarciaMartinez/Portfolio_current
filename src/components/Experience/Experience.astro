---
interface Item {
  name: string | undefined;
  startDate?: null | Date | string | undefined;
  endDate?: null | Date | string | undefined;
  company?: undefined | string;
  position?: undefined | string;
  url?: undefined | string;
  summary?: undefined | string;
  type?: undefined | string;
}

import Briefcase from "@/icons/Briefcase.astro";
import Code from "@/icons/Code.astro";
import Magnifying from "@/icons/Magnifying.astro";
import { work } from "@cv";

const dateFormat = new Intl.DateTimeFormat("es-MX", {
  year: "numeric",
  month: "long",
});

const exp: Item[] = work;
---

<div class="experience-container" id="experiencia">
  <h1>
    <Briefcase />
    <p class="hidden md:block">Experiencia Profesional y Proyectos</p>
    <p class="md:hidden">Experiencia Prof. y Proyectos</p>
  </h1>

  <div class="relative ml-4">
    <ol class="relative border-s dark:border-gray-700">
      {
        exp?.map((item: Item) => {
          const fortedStartDate = dateFormat.format(
            new Date(item?.startDate as string)
          );
          const fortedEndDate = dateFormat.format(
            new Date(item?.endDate as string)
          );
          return (
            <li class="mb-10 ms-6">
              <span class="absolute flex items-center justify-center w-6 h-6  rounded-full -start-3 ring-8  ring-gray-900 bg-[#1b4a83] p-1">
                {item?.type == "Trabajo" ? (
                  <Briefcase />
                ) : item?.type ? (
                  <Code />
                ) : (
                  <Magnifying />
                )}
              </span>
              <div class="flex flex-row flex-wrap md:flex-nowrap">
                <section class="w-full pl-3">
                  <div class="flex items-center text-lg lg:text-xl font-bold text-slate-200">
                    <p>{item?.name}</p>
                    {item.type ? (
                      <span class="font-normal text-sm me-2.5 px-2.5 py-0.5 rounded-full bg-slate-700/40 border border-slate-700 ms-3">
                        {item?.type}
                      </span>
                    ) : null}
                  </div>

                  <p class="py-1 font-semibold text-sm text-slate-100">
                    {item.company ? item.company : null}
                  </p>

                  <p class="block mb-1 text-sm leading-none  text-gray-400 font-medium">
                    {item?.position}
                  </p>

                  <time class="block mb-2 text-sm font-normal leading-none text-gray-500 capitalize">
                    {item?.endDate === null && item?.startDate === null ? (
                      "Por ahora buscando..."
                    ) : item.endDate === null ? (
                      <p>
                        {fortedStartDate} - {"Actualmente"}
                      </p>
                    ) : (
                      <p>
                        {fortedStartDate} - {fortedEndDate}
                      </p>
                    )}
                  </time>
                </section>
                <section class="w-full flex flex-col gap-3 pl-3 mt-3 lg:pl-0 lg:mt-0">
                  <p class="text-sm lg:text-base font-normal text-gray-400 text-pretty">
                    {item.summary}
                  </p>

                  {item.url ? (
                    <a
                      href={item.url}
                      target="_blank"
                      class="bg-slate-700/30 border border-slate-700 rounded-lg px-3 py-1 w-fit duration-200 hover:text-sky-100 hover:bg-slate-700/60"
                    >
                      Ver maÃÅs
                    </a>
                  ) : null}
                </section>
              </div>
            </li>
          );
        })
      }
    </ol>
  </div>
</div>

<style>
  h1 {
    @apply text-2xl md:text-3xl font-bold mb-10 flex flex-row gap-3 items-center;
  }
  .experience-container {
    @apply pt-16 md:pt-36 w-full mx-auto container lg:max-w-4xl md:max-w-2xl select-none;
  }
</style>
