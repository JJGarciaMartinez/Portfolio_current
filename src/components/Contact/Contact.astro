---
import EnvelopeSimple from "@/icons/EnvelopeSimple.astro";
const urlForm = import.meta.env.PUBLIC_URL_FORM;

const stylesLabel =
  "peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6";
---

<div id="contacto" class="contact-container">
  <h1>
    <EnvelopeSimple /> Contáctame
  </h1>
  <div class="contact-form-container">
    <form
      id="contact-form"
      action={urlForm}
      method="POST"
      class="w-full max-w-lg md:mx-auto"
    >
      <div class="input_container group">
        <input
          type="email"
          name="email"
          id="email"
          class="input_form peer"
          placeholder=" "
          required
          minlength="5"
        />
        <label for="email" class={stylesLabel}>Email</label>
      </div>
      <div class="grid md:grid-cols-2 md:gap-6">
        <div class="input_container group">
          <input
            type="text"
            name="name"
            id="name"
            class="input_form peer"
            placeholder=" "
            required
            minlength="3"
            autocomplete="off"
          />
          <label for="name" class={stylesLabel}>Nombre</label>
        </div>
        <div class="input_container group">
          <input
            type="text"
            name="last_name"
            id="last_name"
            class="input_form peer"
            placeholder=" "
            required
            minlength="5"
            autocomplete="off"
          />
          <label for="last_name" class={stylesLabel}>Apellido</label>
        </div>
      </div>
      <div class="grid md:grid-cols-2 md:gap-6">
        <div class="input_container group">
          <input
            type="tel"
            name="phone"
            id="phone"
            class="input_form peer"
            placeholder=""
            required
            minlength="10"
            autocomplete="off"
          />
          <label for="phone" class={stylesLabel}>Telefono</label>
        </div>
        <div class="input_container group">
          <input
            type="text"
            name="company"
            id="company"
            class="input_form peer"
            placeholder=""
            required
            minlength="3"
            autocomplete="off"
          />
          <label for="company" class={stylesLabel}>Empresa</label>
        </div>
      </div>
      <div>
        <div class="mb-5">
          <label
            for="message"
            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
            >Mensaje</label
          >
          <textarea
            id="message"
            rows="4"
            name="message"
            class="block p-2.5 w-full text-sm rounded-lg bg-slate-700/50 border-gray-600 placeholder-gray-400 text-white h-20 max-h-40 min-h-10"
            placeholder="Escribe algo..."
            required
            minlength="10"
            autocomplete="off"></textarea>
        </div>
      </div>
      <span class="flex flex-col gap-2">
        <button
          type="submit"
          class="bg-slate-700/30 border border-slate-700 rounded-lg px-3 py-1 w-full md:w-fit duration-200 hover:text-sky-100 hover:bg-slate-700/60"
          >Enviar</button
        >

        <p id="result" class="text-xs text-red-500"></p>
      </span>
    </form>
    <span class="contact-form-title">
      <h2
        class="text-3xl font-bold mb-5 text-sky-100 !w-fit border-b-2 border-[#1b4a83] pb-2"
      >
        ¡Envíame un mensaje!
      </h2>
      <p class="font-normal text-slate-100">
        ¿Tienes alguna pregunta o propuesta, o simplemente quieres saludar?
      </p>
      <p class="font-bold text-slate-100">Adelante.</p>
    </span>
  </div>
</div>

<style>
  h1 {
    @apply text-2xl md:text-3xl font-bold mb-10 flex flex-row gap-3 items-center;
  }

  .contact-container {
    @apply py-16 md:py-36 w-full mx-auto container lg:max-w-4xl md:max-w-2xl select-none;
  }

  .contact-form-container {
    @apply flex justify-center flex-row gap-14;

    & form {
      @apply md:w-1/2 md:h-1/2;

      .input_container {
        @apply relative z-0 w-full mb-5;
      }

      .input_form {
        @apply block py-2.5 px-0 w-full text-sm bg-transparent border-0 border-b-2 appearance-none text-white border-gray-600 focus:border-blue-500 focus:outline-none focus:ring-0;
      }
    }

    .contact-form-title {
      @apply w-1/2 md:flex flex-col justify-start hidden;
    }
  }
</style>

<script>
  import {
    email_regex,
    name_regex,
    lastname_regex,
    phone_regex,
    company_regex,
    message_regex,
  } from "@utils/regex_form.ts";

  const form = document.getElementById("contact-form") as HTMLFormElement;
  const result = document.getElementById("result") as HTMLParagraphElement;
  const errors: string[] = [];

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    errors.length = 0;
    result.textContent = "";
    result.style.color = "rgb(239, 68, 68)";

    const email = formData.get("email") as string;
    const name = formData.get("name") as string;
    const last_name = formData.get("last_name") as string;
    const phone = formData.get("phone") as string;
    const company = formData.get("company") as string;
    const message = formData.get("message") as string;

    if (!email || !name || !last_name || !phone || !company || !message) {
      errors.push("Por favor, rellena todos los campos");
    }

    if (!email_regex.test(email)) {
      errors.push("Email");
    }

    if (!name_regex.test(name)) {
      errors.push("Nombre");
    }

    if (!lastname_regex.test(last_name)) {
      errors.push("Apellido");
    }

    if (!phone_regex.test(phone)) {
      errors.push("Teléfono");
    }

    if (!company_regex.test(company)) {
      errors.push("Empresa");
    }

    if (!message_regex.test(message)) {
      errors.push("Mensaje");
    }

    if (errors.length > 0) {
      result.textContent = `Por favor, revisa los siguientes campos: ${errors.join(
        ", "
      )}`;
      return;
    }

    try {
      const response = await fetch(form.action, {
        method: form.method,
        body: formData,
        headers: {
          Accept: "application/json",
        },
      });

      const data = await response.json();

      if (response.ok) {
        form.reset();
        result.textContent = "Mensaje enviado correctamente";
        result.style.color = "green";
      } else {
        result.textContent = data.message;
        result.style.color = "rgb(239, 68, 68)";
      }
    } catch (error) {
      result.textContent = "Error al enviar el mensaje";
      result.style.color = "rgb(239, 68, 68)";
    }
  });
</script>
